---
# Install RKE2 in air-gapped environment for factory floor
- name: Create RKE2 directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/rke2-artifacts
    - /etc/rancher/rke2
    - /var/lib/rancher/rke2/agent/images

- name: Download RKE2 artifacts for offline installation
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: '0755'
  loop:
    - url: "https://github.com/rancher/rke2/releases/download/{{ rke2_version }}/rke2.linux-amd64.tar.gz"
      dest: "/opt/rke2-artifacts/rke2.linux-amd64.tar.gz"
    - url: "https://github.com/rancher/rke2/releases/download/{{ rke2_version }}/rke2-images.linux-amd64.tar.zst"
      dest: "/opt/rke2-artifacts/rke2-images.linux-amd64.tar.zst"
    - url: "https://github.com/rancher/rke2/releases/download/{{ rke2_version }}/sha256sum-amd64.txt"
      dest: "/opt/rke2-artifacts/sha256sum-amd64.txt"
  when: not offline_mode | bool
  delegate_to: localhost
  run_once: true

- name: Copy RKE2 artifacts to target nodes (air-gapped)
  copy:
    src: "/opt/rke2-artifacts/"
    dest: "/opt/rke2-artifacts/"
    mode: preserve
  when: offline_mode | bool

- name: Verify RKE2 artifact checksums
  shell: |
    cd /opt/rke2-artifacts
    sha256sum -c sha256sum-amd64.txt --ignore-missing
  register: checksum_result
  failed_when: checksum_result.rc != 0

- name: Extract RKE2 binary
  unarchive:
    src: "/opt/rke2-artifacts/rke2.linux-amd64.tar.gz"
    dest: "/usr/local"
    remote_src: true
    creates: "/usr/local/bin/rke2"

- name: Create RKE2 symlinks
  file:
    src: "/usr/local/bin/rke2"
    dest: "/usr/local/bin/{{ item }}"
    state: link
  loop:
    - kubectl
    - crictl
    - ctr

- name: Load RKE2 container images (air-gapped)
  shell: |
    zstd -d /opt/rke2-artifacts/rke2-images.linux-amd64.tar.zst -o /tmp/rke2-images.tar
    mkdir -p /var/lib/rancher/rke2/agent/images/
    cp /tmp/rke2-images.tar /var/lib/rancher/rke2/agent/images/
  when: offline_mode | bool

- name: Create RKE2 configuration directory
  file:
    path: /etc/rancher/rke2
    state: directory
    mode: '0755'

- name: Generate RKE2 server configuration
  template:
    src: rke2-server-config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
    mode: '0600'
  when: node_role == "server"
  notify: restart rke2-server

- name: Generate RKE2 agent configuration
  template:
    src: rke2-agent-config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
    mode: '0600'
  when: node_role == "agent"
  notify: restart rke2-agent

- name: Create RKE2 server systemd service
  copy:
    content: |
      [Unit]
      Description=Rancher Kubernetes Engine v2 (server)
      Documentation=https://rancher.com/docs/rke2/latest/en/
      Wants=network-online.target
      After=network-online.target
      Conflicts=rke2-agent.service
      
      [Service]
      Type=notify
      EnvironmentFile=-/etc/default/%N
      EnvironmentFile=-/etc/sysconfig/%N
      EnvironmentFile=-/usr/local/lib/systemd/system/%N.env
      KillMode=process
      Delegate=yes
      LimitNOFILE=1048576
      LimitNPROC=infinity
      LimitCORE=infinity
      TasksMax=infinity
      TimeoutStartSec=0
      Restart=always
      RestartSec=5s
      ExecStartPre=/bin/sh -xc '! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service'
      ExecStartPre=-/sbin/modprobe br_netfilter
      ExecStartPre=-/sbin/modprobe overlay
      ExecStart=/usr/local/bin/rke2 server
      
      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/rke2-server.service
    mode: '0644'
  when: node_role == "server"

- name: Create RKE2 agent systemd service
  copy:
    content: |
      [Unit]
      Description=Rancher Kubernetes Engine v2 (agent)
      Documentation=https://rancher.com/docs/rke2/latest/en/
      Wants=network-online.target
      After=network-online.target
      Conflicts=rke2-server.service
      
      [Service]
      Type=notify
      EnvironmentFile=-/etc/default/%N
      EnvironmentFile=-/etc/sysconfig/%N
      EnvironmentFile=-/usr/local/lib/systemd/system/%N.env
      KillMode=process
      Delegate=yes
      LimitNOFILE=1048576
      LimitNPROC=infinity
      LimitCORE=infinity
      TasksMax=infinity
      TimeoutStartSec=0
      Restart=always
      RestartSec=5s
      ExecStartPre=-/sbin/modprobe br_netfilter
      ExecStartPre=-/sbin/modprobe overlay
      ExecStart=/usr/local/bin/rke2 agent
      
      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/rke2-agent.service
    mode: '0644'
  when: node_role == "agent"

- name: Enable and start RKE2 services
  systemd:
    name: "rke2-{{ node_role }}"
    enabled: true
    state: started
    daemon_reload: true
  when: node_role in ['server', 'agent']
