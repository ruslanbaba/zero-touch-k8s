apiVersion: apps/v1
kind: Deployment
metadata:
  name: quality-control-dashboard
  namespace: factory-apps
  labels:
    app: quality-control-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quality-control-dashboard
  template:
    metadata:
      labels:
        app: quality-control-dashboard
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Equal
        value: "true"
        effect: NoSchedule
      containers:
      - name: dashboard
        image: registry-01.factory.local:5000/factory/qc-dashboard:v1.0.0
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_URL
          value: "postgresql://qc_user:qc_password@postgres-service:5432/quality_control"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: FACTORY_LINES
          value: "A,B,C,D"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: qc-dashboard-service
  namespace: factory-apps
spec:
  selector:
    app: quality-control-dashboard
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qc-dashboard-ingress
  namespace: factory-apps
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: qc-dashboard.factory.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qc-dashboard-service
            port:
              number: 80
